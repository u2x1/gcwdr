name: Release

permissions:
  contents: write

on:
  push:
    tags:
      - "v*"

jobs:
  build_artifact:
    name: ${{ matrix.os }}/GHC ${{ matrix.ghc }}/${{ github.ref }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
        ghc:
          - "9.0.2"
        cabal: ["3.8"]

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Setup Haskell
        uses: haskell/actions/setup@v2.0.1
        id: setup-haskell-cabal
        with:
          ghc-version: ${{ matrix.ghc }}
          cabal-version: ${{ matrix.cabal }}

      - name: Freeze
        run: |
          cabal freeze

      - name: Cache ~/.cabal/store
        uses: actions/cache@v3.0.11
        with:
          path: ${{ steps.setup-haskell-cabal.outputs.cabal-store }}
          key: ${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles('cabal.project.freeze') }}

      - name: Build binary
        run: |
          mkdir dist
          cabal install exe:gcwdr-exe --install-method=copy --overwrite-policy=always --installdir=dist

      - if: matrix.os == 'windows-latest'
        name: Set Windows binary path name
        run: |
          chcp 65001
          mv ./dist/gcwdr-exe.exe ./dist/gcwdr-${{ runner.os }}-ghc-${{ matrix.ghc }}.exe
          echo "BINARY_PATH=./dist/gcwdr-${{ runner.os }}-ghc-${{ matrix.ghc }}.exe" >> $env:GITHUB_ENV

      - if: matrix.os != 'windows-latest'
        name: Set Unix binary path name
        run: |
          mv ./dist/gcwdr-exe ./dist/gcwdr-${{ runner.os }}-ghc-${{ matrix.ghc }}
          echo "BINARY_PATH=./dist/gcwdr-${{ runner.os }}-ghc-${{ matrix.ghc }}" >> $GITHUB_ENV

      - name: Compress binary
        uses: svenstaro/upx-action@2.0.1
        with:
          file: ${{ env.BINARY_PATH }}

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ env.BINARY_PATH }}
